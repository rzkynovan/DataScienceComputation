res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, byrow = T)
MATRIX(1, 4, 5, T)
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = lapply(1)
}
}
return(res)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = lapply(1)
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res[NCOL][NROW] = {NA}
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = lapply(1)
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
res[i,j] = 1
res[i,j] <- 1
MATRIX(1, 4, 5, T)
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res[NCOL][NROW] = {NA}
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
return(j)
}
}
#return(res)
}
}
MATRIX(1, 4, 5, T)
?list
c
?c
res = c(NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
return(j)
}
}
#return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = c(NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
return(j)
}
}
#return(res)
}
}
MATRIX(1, 4, 5, T)
MATRIX(1, 4, 5, T)
res[i,j] = 1
for (j in 1:NROW) {
res[i,j] = 1
}
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
#return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = c(NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
#return(res)
}
}
MATRIX(1, 4, 5, T)
res = matrix(NA, NROW, NCOL)
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = matrix(NA, NROW, NCOL)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
#return(res)
}
}
MATRIX(1, 4, 5, T)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = matrix(NA, NROW, NCOL)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
NCOL = as.integer(NCOL)
NROW = as.integer(NROW)
res = matrix(NA, NROW, NCOL)
res = matrix(0, NROW, NCOL)
res = matrix(0, as.integer(NROW), as.integer(NCOL))
res = matrix(0, as.numeric(NROW), as.numeric(NCOL))
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = matrix(0, as.numeric(NROW), as.numeric(NCOL))
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
res = matrix(0, 4, 5)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
res = matrix(0, 4, 5)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
res = matrix(0, NCOL(), NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
NCOL <- length(NCOL)
NROW <- length(NROW)
res = matrix(0, NCOL(), NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
MATRIX <- function(DATA, NCOL, NROW, BYROW){
NCOL <- length(NCOL)
NROW <- length(NROW)
res = matrix(0, NCOL(), NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
res = matrix(0, NCOL, NROW)
NROW <- as.double(NROW)
res = matrix(0, NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
NCOL <- as.double(NCOL)
NCOL <- as.double(NCOL)
NROW <- as.double(NROW)
res = matrix(0, NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
NCOL <- as.double(NCOL)
NROW <- as.double(NROW)
res = matrix(0, NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
NCOL <- as.double(NCOL)
NROW <- as.double(NROW)
res = matrix(0, NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, NCOL, NROW, BYROW){
NCOL <- as.double(NCOL)
NROW <- as.double(NROW)
res = matrix(0, NCOL, NROW)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
res = matrix(0, apply(NCOL), NROW)
MATRIX <- function(DATA, as.numeric(NCOL), NROW, BYROW){
res = matrix(0, KOLOM, BARIS)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
if(BYROW == TRUE){
for (i in 1:NCOL) {
for (j in 1:NROW) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
for (j in 1:BARIS) {
res[i,j] = 1
}
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
res[i,j] = 1
}
}
return(res)
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
res[i,j] = 1
}
}
return(res)
}
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
res[i,j] = 1
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
res[i,j] = a
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
return(res)
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
return(res)
}
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
a=0
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
return(res)
}
}
MATRIX(1, 4, 5, T)
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
}
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
}
}
return(res)
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
a=0
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
}
}
return(res)
}
MATRIX(1, 4, 5, T)
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
a=0
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
}
}
return(res)
}
MATRIX(1, 4, 5, T)
MATRIX(1, 4, 5, F)
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
a=0
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[i,j] = a
}
}
}
return(res)
}
MATRIX(1, 4, 5, F)
res[j, i] = a
for (j in 1:KOLOM) {
a = a+1
res[j, i] = a
}
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[j, i] = a
}
}
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[j, i] = a
}
}
}
return(res)
MATRIX <- function(DATA, KOLOM, BARIS, BYROW){
res = matrix(0, KOLOM, BARIS)
a=0
if(BYROW == TRUE){
for (i in 1:KOLOM) {
for (j in 1:BARIS) {
a = a+1
res[i,j] = a
}
}
} else {
for (i in 1:BARIS) {
for (j in 1:KOLOM) {
a = a+1
res[j, i] = a
}
}
}
return(res)
}
MATRIX(1, 4, 5, F)
MATRIX(1:20, 4, 5, F)
install.packages("usethis")
install.packages("gitcreds")
library(usethis)
library(gitcreds)
use_git_config(user.name = "rzkynovan",
user.email = "rizkynovan21@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
