x0 = -b / (2*a)
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = -b / (2*a)
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
return(x_new)
NewtonRhap = function(a,b,c){
x0 = -b / (2*a)
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
x_old = 0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = 0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
tol = -0.0000001
x_old = 0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = -0.0000001
x_old = 0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = 0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old = x0
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while ((x_new - x_old)>tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
x_old = x_new
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap <- function(a, b, c, x0 = NULL, tol = 1e-7, max_iter = 100) {
# Jika nilai awal tidak diberikan, gunakan -b/(2*a)
if(is.null(x0)) {
x0 <- -b / (2 * a)
}
fx <- function(x) {
a * x^2 + b * x + c
}
fax <- function(x) {
2 * a * x + b
}
x_old <- x0
x_new <- x_old  # inisialisasi
iter <- 0
repeat {
iter <- iter + 1
# Cek agar tidak terjadi pembagian dengan nol
deriv <- fax(x_old)
if(deriv == 0) {
stop("Turunan bernilai 0. Pilih nilai awal yang berbeda.")
}
x_new <- x_old - (fx(x_old) / deriv)
if (abs(x_new - x_old) < tol || iter >= max_iter) {
break
}
x_old <- x_new
}
return(x_new)
}
# Contoh penggunaan dengan nilai awal yang lebih baik:
# Untuk f(x) = x^2 - 2, akar-akar adalah sqrt(2) dan -sqrt(2).
# Kita pilih nilai awal x0 = 2 (mendekati sqrt(2))
hasil <- NewtonRhap(1, 0, -2, x0 = 2)
cat("Akar yang ditemukan:", hasil, "\n")
NewtonRhap = function(a,b,c){
x0 = 2
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
return(x_old)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- x_old
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_old)
}
NewtonRhap(1,0,-2)
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
NewtonRhap = function(a,b,c){
x0 = 1.1
fx <- function(x){
res = (a * x^2) + (b*x) + c
return(res)
}
#fax = (2*a*x) + b
fax <- function(x){
res = (2*a*x) + b
return(res)
}
tol = 0.0000001
x_old <- x0
x_new <- 0
while (abs(x_new - x_old) > tol) {
x_new = x_old - (fx(x_old)/fax(x_old))
x_old = x_new
}
return(x_new)
}
NewtonRhap(1,0,-2)
